---
import IconArrowX from "@/components/icons/icon-arrow-x";
import TeamCard from "./team-card.astro";
import { team } from "@/consts/team";
---

<section class="relative block w-full lg:hidden">
  <swiper-container
    navigation="true"
    navigation-next-el=".custom-next-button"
    navigation-prev-el=".custom-prev-button"
    loop="true"
    class="swiper-2 mx-auto w-64 lg:mx-0"
  >
    {
      team.map((card) => (
        <swiper-slide class="flex min-h-[30rem] items-center justify-center transition-all duration-500">
          <TeamCard card={card} />
        </swiper-slide>
      ))
    }
  </swiper-container>

  <button
    id="team-button"
    class="custom-prev-button absolute left-4 top-1/2 -translate-y-1/2 transition-colors lg:-left-8"
    ><IconArrowX right={false} className=""/></button
  >
  <button
    id="team-button"
    class="custom-next-button absolute right-4 top-1/2 -translate-y-1/2 transition-colors lg:-right-8"
    ><IconArrowX right  className="" /></button
  >
</section>

<style>
  .custom-prev-button,
  .custom-next-button {
    background-color: white;
    border-radius: 99999px;
    padding: 0.04rem;
    border: solid 4px black;
    z-index: 1;
  }

  .custom-prev-button:hover,
  .custom-next-button:hover {
    @apply bg-primary;
  }

  @media (min-width: 1024px) {
    .custom-prev-button,
    .custom-next-button {
      padding: 0.4rem;
      border: solid 6px black;
    }
  }
</style>

<script>
  import { register } from "swiper/element/bundle";
  register();
  const swiperEl = document.querySelector("swiper-container");

  // swiper parameters
  const swiperParams = {
    slidesPerView: "auto",
    spaceBetween: 10,
    breakpoints: {
      640: {
        slidesPerView: 1,
      },
    },
    on: {
      init() {
        // ...
      },
    },
  };

  // now we need to assign all parameters to Swiper element
  Object.assign(swiperEl!, swiperParams);

  // and now initialize it
  swiperEl!.initialize();
</script>
